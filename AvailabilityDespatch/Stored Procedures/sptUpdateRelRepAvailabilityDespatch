select	tDiaryCategory.Category, --replace with ID
		tRegDiary.tReg_ID,
		tReg.Reg,-- remove
		tReg.tReliabilityFleet_ID,
		tRegDiary.ReportText,
		history.ActionText,
		tRegDiaryStatus.Status, -- replace with ID
		DATEDIFF(MI, tAOGDetail.AOGDeclareDateTime, tAOGDetail.AOGClearDateTime) as AogMins,
		DATEDIFF(MI, tAOGDetail.IncidentDeclaredDateTime, tAOGDetail.ARServiceDataTime) as AcDowntimeMins,
		tAOGDetail.IncidentDeclaredDateTime,
		tAOGDetail.AOGDeclareDateTime,
		tAOGDetail.AOGClearDateTime,
		tAOGDetail.ARServiceDataTime,
		IIF(tTechLog.TechLogNo is not null and tRegJourney.JourneyNumber is not null, CONCAT(tTechLog.TechLogNo, '/', tRegJourney.JourneyNumber), NULL),
		tDefect.DefectItemNo,
		tReg.uRALBase_ID,
		tAOGDetail.tPlace_ID,
		afhours.LifeTotal,
		landings.LifeTotal,
		tDefect.Description,
		tDefect.ActionText
from	tRegDiary
join	tDiaryCategory on tRegDiary.tDiaryCategory_ID = tDiaryCategory.ID
join	tRegDiaryRange on tRegDiary.tRegDiaryRange_ID = tRegDiaryRange.ID
join	tRegDiaryStatus on tRegDiary.tRegDiaryStatus_ID = tRegDiaryStatus.ID
join	tReg on tRegDiary.tReg_ID = tReg.ID
left join	tAOGDetail on tRegDiary.ID = tAOGDetail.tRegDiary_ID
left join	tDefect on tAOGDetail.tDefect_ID = tDefect.ID
left join	tRegJourney on tDefect.tRegJourney_ID = tRegJourney.ID
left join	tTechLog on tRegJourney.tTechLog_ID = tTechLog.ID
outer apply	(
				SELECT	rj.ID,
						dbo.FormatedLifeCodeValue(tLifeCode.ID, tRegJourneyLogBookLifeCodeEvents.LifeTotal,0) LifeTotal
				FROM	tRegJourney rj
				JOIN	tRegJourneyLogBook ON rj.ID = tRegJourneyLogBook.tRegJourney_ID
				JOIN	tRegJourneyLogBookLifeCodeEvents ON tRegJourneyLogBook.ID = tRegJourneyLogBookLifeCodeEvents.tRegJourneyLogBook_ID
				JOIN	tLifeCode ON tRegJourneyLogBookLifeCodeEvents.tLifeCode_ID = tLifeCode.ID AND tLifeCode.RegJourneyLandings = 1
				JOIN	tLogBook ON tRegJourneyLogBook.tLogBook_ID = tLogBook.ID
				JOIN	tAsset ON tLogBook.tAsset_ID = tAsset.ID
				JOIN	tModel ON tAsset.tModel_ID = tModel.ID
				JOIN	tModelType ON tModel.tModelType_ID = tModelType.ID
				WHERE	tModelType.RegAsset = 1
				AND		rj.ID = tRegJourney.ID
			) landings
outer apply	(
				SELECT	rj.ID,
						dbo.FormatedLifeCodeValue(tLifeCode.ID, tRegJourneyLogBookLifeCodeEvents.LifeTotal, 0) LifeTotal
				FROM	tRegJourney rj
				JOIN	tRegJourneyLogBook ON rj.ID = tRegJourneyLogBook.tRegJourney_ID
				JOIN	tRegJourneyLogBookLifeCodeEvents ON tRegJourneyLogBook.ID = tRegJourneyLogBookLifeCodeEvents.tRegJourneyLogBook_ID
				JOIN	tLifeCode ON tRegJourneyLogBookLifeCodeEvents.tLifeCode_ID = tLifeCode.ID AND tLifeCode.RegJourneyHours = 1
				JOIN	tLogBook ON tRegJourneyLogBook.tLogBook_ID = tLogBook.ID
				JOIN	tAsset ON tLogBook.tAsset_ID = tAsset.ID
				JOIN	tModel ON tAsset.tModel_ID = tModel.ID
				JOIN	tModelType ON tModel.tModelType_ID = tModelType.ID
				WHERE	tModelType.RegAsset = 1
				AND		rj.ID = tRegJourney.ID
			) afhours
cross apply	(
				SELECT	tRegDiary_ID,
						ActionText
				FROM	(
							SELECT	tRegDiary_ID,
									ActionText,
									ROW_NUMBER() OVER(PARTITION BY tRegDiary_ID ORDER BY ID DESC) AS ident
							FROM	tRegDiaryHistory
						) hist
				WHERE	ident = 1
				AND		tRegDiary.ID = tRegDiary_ID
			) history

order by tRegDiary.DiaryDateTime